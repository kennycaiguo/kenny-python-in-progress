②.插入模式

插入模式则用来向文本中添加内容的

i    在光标所在字符前开始输入文字并进入插入模式

a   在光标所在字符后开始输入文字并进入插入模式

o   (字母o) 在光标所在行的下面单独开一新行来输入文字并进入插入模式

s   删除光标所在的字符并进入插入模式

I   在行首开始输入文字并进入插入模式。此行首指第一个非空白字符处。如果行首有空格，则在空格之后输入文字并进入插入模式

A 在行尾开始输入文字并进入插入模式。不必管光标在此行的什麽地方，只要按 A 就会在行尾等着您输入文字。

O (大写字母O) 在光标所在行的上面单独开一新行来输入文字并进入插入模式。

S   删除光标所在行并进入插入模式


在命令行下直接输入：行号 比如跳到500行，输入：500即可

:101       跳转到101行

Ctrl+f     向下翻页

Ctrl+b    向上翻页

Ctrl+d    向下翻半页

Ctrl+u    向上翻半页

ctrl+e    向下滚动一行

ctrl+y    向上滚动一行

n%       到文件n%的位置。

zz        将当前行移动到屏幕中央。

zt        将当前行移动到屏幕顶端。

zb        将当前行移动到屏幕底端


整体缩进的操作：

在命令行模式下，按住shift+v进入可视行选择状态，使用shift加上下左右方向键选择好整体的代码块，然后再按住shift+>或者shift+< 向右或者向左缩进即可整体缩进。

删除类操作：
x:删除光标所在的字符；

dw：删除光标所在的单词；

dd：删除当前行；

d$ :删除光标至行尾的所有字符；

ndd ：删除n行，n为数字；

dG ：删除当前行到最后一行；

:g/^\s*$/d      删除只有空白的行

删除光标后的所有内容    直到文章结尾      dG

删除光标前的所有内容    直到文章开头      dgg

删除具有特定关键词的行

：g/state/d   删除具有单词state的行     

：%d 删除全文

：100,200 d   删除100行到200行

d1G或dgg   剪切光标以上的所有行。


复制黏贴类操作
yw：复制光标所在的单词；

y$:复制光标至行尾的所有字符；

yy：复制当前行；

nyy：复制n行，n为数字；

p：黏贴
. 重复上一次操作


改变和替换操作
r ：替换光标所在字符；

ci ：修改当前字符

cc：修改当前行

c$：修改当前到行尾的内容

：/abc 123 ：使用abc代替123

ddp：上下两行交换

u ：撤销指令

命令模式下按:即可进入底行模式。

:set nu 在每一行前加行号

:set nonu 不加行号

:set ic 不区分大小写

:set noic

:set wrap 分行显示

:set nowrap

多窗口操作：
:sp 横着开新窗口

:vsp 竖向开新窗口

:Ctrl+w 切换窗口（两次）

:E 查看父目录内容

:e 刷新


保存退出

存盘：

:q!         :不存盘退出

:e!         :放弃修改文件内容，重新载入该文件编辑

:wq         :存盘退出

:w            :存盘

:browse o    :用浏览器打开文件

:browse w    :用浏览器保存文件

:wqa        :保存并关闭所有文件

:qa            :关闭所有文件

:browse wa    :用浏览器保存所有文件

查找命令

查找

fx             :移动到一个指定的字符,单字符查找命令是最有用的移动命令之一。”fx” 命令向前查找本行中的字符 x。提示：”f” 表示 “Find”。

/pattern    :正方向搜索一个字符模式   从文件开头往结尾处搜索

?pattern     :反方向搜索一个字符模式 从文件结尾往开头处搜索

然后按n 继续向下找  按大写N向上搜索

精确查找整个单词    :如果你输入 “/the”，你也可能找到 “there”。要找到以 “the” 结尾的单词，可以用：

/the\>

“\>” 是一个特殊的记号，表示只匹配单词末尾。类似地，”\<” 只匹配单词的开头。 这样，要匹配一个完整的单词 “the”，只需：

/\<the\>

把光标放到某个单词上面，然后按*号键，表示查找这个单词。”#” 命令在反向完成相同的功能。

查找整个单词：/\<word\>

:set hlsearch         :高亮显示查找到的单词

:set nohlsearch     :关闭改功能

:set ignorecase　　忽略大小写的查找

:set noignorecase　　不忽略大小写的查找

 
替换命令

[addr]s/源字符串/目的字符串/[option]，我们可以看出addr和option是可以缺省不填的，他们各个字段的意思是：

 
[addr]代表检索范围，缺省表示当前行，1,10表示1到10行，% 代表整个文件等价于1 , $  ，而  . , $ 代表当前行到文件末尾

 s代表替换的意思

 option代表操作类型，缺省只对第一个匹配的字符进行替换，g代表全局替换,c代表操作时确认，gc可以组合使用:%s/^/#/         全文的行首加入 # 字符,批量注释的时候非常有用

:%s= *$==        将所有行尾多余的空格删除

:g/^$/d          这里的g表示对文章中所有符合要求字符串执行替换操作，^表示行首,$表示行尾，整个意思是：将所有的空行删除命令模式：

简单指令

有无/g：有/g  表示所有，无则表示每一行第一个

：%s/string1/string2   在当前文件中，用string2 替换每一行的第一个string1  无需确认

：%s/string1/string2/g   在当前文件中，用string2 替换每一行的所有string1  无需确认

：%s/string1/string2/c  在当前文件中，用string2 替换所有的string1  需要一个一个确认

:line1,line2 s/string1/string2/g:在行line1至line2中间将所以string1替换为string2

:line1,line2 s/string1/string2/c:在行line1至line2中间将string1替换为string2，需要一个一个确认

：n, $s/sring1/string2 / 替换第 n 行开始到最后一行中每一行的第一个 string1为 string2 (空表示为最后一行)

：., $s/sring1/string2 /  替换当前行到最后一行中每一行的第一个 string1为 string2 (空表示为最后一行)

内容转移

写文件

:n1,n2 write temp.c 将本文件中的n1,到n2行写入temp.c这个文件中去

:n1,n2 co n3         :将 n1 行到 n2 行之间的内容拷贝到第 n3 行下。

:n1,n2 m n3         :将 n1 行到 n2 行之间的内容移至第 n3 行下。

:n1,n2 d             :将 n1 行到 n2 行之间的内容删除。

:n1,n2 w filename     :将 n1 行到 n2 行之间的内容保存到文件 filename 中

使用剪贴板

"*y    :将内容复制到剪贴板

"*p    :将剪贴板的内容粘贴出来
文件切换与打开

同时打开多个文件 ：gvim file1 file2 file 3

切换到下一个文件：bn  

切换到上一个文件：bp

移动命令

查找替换：

:%s/需要替换的内容/新内容/g

way1:

/【word】 :查找某个word

? 命令功能与 “/” 的功能类似，但是是反方向查找

cw【newword】:替换为新word

n: 继续查找

.: 执行替换

way2:

:s/string1/string2/g:在一行中将string1替换为string2,g表示执行用c表示需要确认

:num1,num2 s/string1/string2/g:在行num1至num2中间将string1替换为string2

:1,$ s/string1/string2/g:在全文中将string1替换为string2

如果替换时需要确认，在g后面加上一个c(confirm)

如果要全文搜索，在”s/”前面加上一个%，例如”:% s/”

16删除重复行

http://blog.gdsyzx.edu.cn/sense/?p=1129

17列插入

1: 定位光标

2: CTRL+v             #进入Visual Mode。

3: j                       #选择要在哪些行加入？！

4: I                       #一定是大写！

5: 输入要插入的文本

6: ESC 

多界面操作

命令   :vs  多个竖立界面

命令   :sp  多个横向界面

目录跳转选择    :E

上跳行       W

下跳行       B

界面跳转：   ctrl+w   再按w或者方向键19 查看行号：set nu


排序：sort

标记：ma `a

使用标记标注位置：便于快速跳转

 m{a-z}: 标记光标所在位置，局部标记，只用于当前文件。

 m{A-Z}: 标记光标所在位置，全局标记。标记之后，退出Vim， 重新启动，标记仍然有效。

 `{a-z}: 移动到标记位置。

 ‘{a-z}: 移动到标记行的行首。

 `{0-9}：回到上[2-10]次关闭vim时最后离开的位置。

 “: 移动到上次编辑的位置。“也可以，不过“精确到列，而”精确到行 。如果想跳转到更老的位置，可以按C-o，跳转到更新的位置用C-i。

 

 `”: 移动到上次离开的地方。

 `.: 移动到最后改动的地方。

 :marks 显示所有标记。

 :delmarks a b – 删除标记a和b。

 :delmarks a-c – 删除标记a、b和c。

 :delmarks a c-f – 删除标记a、c、d、e、f。

 :delmarks! – 删除当前缓冲区的所有标记。

 :help mark-motions 查看更多关于mark的知识。

插入

i: 在光标前插入；一个小技巧：按8，再按i，进入插入模式，输入=， 按esc进入命令模式，就会出现8个=。 这在插入分割线时非常有用，如30i+<esc>就插入了36个+组成的分割线

 :r filename在当前位置插入另一个文件的内容。

 :[n]r filename在第n行插入另一个文件的内容。

 :r !date 在光标处插入当前日期与时间

文本对象

 aw：一个词

 as：一句。       ：连续没有空格的多行

 ap：一段。       ：连续没有空格的多行

 ab：一块（包含在圆括号中的）。例化时用到

y, d, c, v都可以跟文本对象

模式匹配：执行操作

还有一种比替换更灵活的方式，它是匹配到某个模式后执行某种命令，

语法为 :[range]g/pattern/command

例如 :%g/^xyz/normal dd。

表示对于以一个空格和xyz开头的行执行normal模式下的dd命令。

关于range的规定为：

 如果不指定range，则表示当前行。

 m,n: 从m行到n行。

 0: 最开始一行（可能是这样）。

 $: 最后一行

 .: 当前行

 %: 所有行
分屏操作

 vim -o file1 file2:水平分割窗口，同时打开file1和file2

 vim -O file1 file2:垂直分割窗口，同时打开file1和file2

：E 跳到目录 选中文件 o打开文件

Ctrl+W ctrl+w 切换窗口

水平分割

:sp           水平分割出同样大小的文件

:sp filename   水平分割窗口，并在新窗口中显示文件filename

:nsp         水平分割出一个n行高的窗口

ctrl+w +f     水平分割出一个窗口，并在新窗口打开名称为光标所在词的文件

垂直分割

:vs           把当前窗口分割成竖直分布的两个窗口

:vne         垂直分割出一个新窗口

大小写切换

选中：gu 小写 gU 大写

：m,n  gU   从m行到n行 全部大写

单词virtul全部大写：？？

某个单词大小写切换：ESC==>鼠标双击单词==>gu 或者gU

缩进缩出-自动排版

正常模式下，按两下>;光标所在行会缩进。

如果先按了n，再按两下>;，光标以下的n行会缩进。

对应的，按两下<;，光标所在行会缩出。

如果在编辑代码文件，可以用=进行调整。

在可视模式下，选择要调整的代码块，按=，代码会按书写规则缩排好。

或者n =，调整n行代码的缩排

:130,140 >>   第130行到140行缩进

文件目录

:pwd 显示当前文件目录

 改写文件

 c[n]w: 改写光标后1(n)个词。

 c[n]l: 改写光标后n个字母。

 c[n]h: 改写光标前n个字母。

 [n]cc: 修改当前[n]行。

 [n]s: 以输入的文本替代光标之后1(n)个字符，相当于c[n]l。

 [n]S: 删除指定数目的行，并以所输入文本代替之。

打开一个新窗口

最简单的打开新窗口的方法是

:split
它把一个窗口分成两个，光标留在上面的那个窗口中。

通过

Ctrl-w+方向键
来在窗口间切换

比如

Ctrl-ww 或 Ctrl-w Ctrl-w
切换到下一个窗口;

Ctrl-wj 和 Ctrl-wk
分别切换到下一个窗口和上一个窗口。

要关闭窗口，用

:q 或 ZZ 或 Ctrl-wc
找开一个新窗口并在其中打开一个文件

:split 文件名
也可以给split命令分配一个初始命令，也就是说执行完split接着要做的

:split +命令 文件名
比如

:split +/printf three.c
命令会把当前窗口分成两个然后在上面的窗口中查找printf这个字符串。

控制窗口大小

如果给split命令指定一个参数，则表示新找开窗口的高度

比如

:3split alpha.c
打开一个高度为3的窗口并在其中打开alpha.c

:new命令

:new
命令用起来就跟split差不多，只有一点不同：new命令会在新窗口中新建一个文件，而split只是在新窗口中打开原窗口中的内容。

分割并查看(Split and View)

:sview
命令新建一个窗口并且其中的内容是只读的。

改变窗口大小

行数Ctrl-w+
把当前窗口高度增加"行数"行(如不指定行数，默认为1)

行数Ctrl-w-
把当前窗口高度减少"行数"行(如不指定行数，默认为1)

Ctrl-w=
让所有窗口一样高

行数Ctrl-w_
把当前窗口的高度设为"行数”，如不指定则把它最大化。

缓冲

Vim用缓冲来代表一个文件。当你在编缉一个文件时，只是在编缉它的缓冲。当你完成编辑保存时，Vim把缓冲中的内容保存进文件。当然，事情并不是这么简单。在Vim中设置的标记之类的也保存在缓冲中。你可以同时拥有多个缓冲，当你编辑多个文件时就是这样。当你想要一个Vim窗口，并且想编辑多个文件时，把这个窗口最大化是不管用的，因为这不是一个窗口，其它的窗口还是能看得见的。此时你可以把不编辑的缓冲隐藏(hide)，用命令

:hide
一个缓冲有三种可能的状态:

活动:显示在屏幕上的窗口

隐藏:没有显示在屏幕上的在编辑的缓冲

不活动:缓冲没有在编辑，但是保存着它的信息

第三种状态需要多解释一下，当你编辑另一个文件时，当前文件的内容就没有用了。Vim就关掉它。但是它的一些其它信息可能还有用。（这一部分比较混乱，原文说得也不是很清楚，不懂也无所谓）

要查看缓冲的列表，用

:buffers
命令。输出的第一列是缓冲编号，第二列是状态，第三列是与缓冲对应的文件。

状态共且以下几种:

- 不活动的缓冲
   h 隐藏的缓冲
   % 当前缓冲
   # 其它缓冲
   + 文件被编辑而未保存
选择一个缓冲

:buffer 缓冲编号
如果你不知道缓冲的编号，可以用

:buffer 文件名
下面的命令分割窗品并编辑指定的缓冲

:sbuffer 缓冲编号
或

:sbuffer 文件名
还有很多关于缓冲的命令:

:bnext 去下一个缓冲
:count bnext 执行count次去下一个缓冲
:count sbnext 先分割窗口，然后执行:count bnext
:count bprevious 去上一个缓冲。如果指定了count,则执行count次
:count sbprevious 先分割窗口，然后执行:count bprevious
:count bNext 同:count bprevious
:count sbNext 同:count sbprevious
:blast 去最后一个缓冲
:sblast 先分割窗口再执行:blast
:brewind 去第一个窗口
:sbrewind 先分割窗口再执行:brewind
:bmodified count 去第count个编辑过的缓冲
:sbmodified count 等于:split加:bmodified
缓冲选项

通常当所有编辑一个文件的窗口都关掉后，这个窗口的缓冲就变成"不活动”,如果不想这样，可以设置

:set hidden
让它变成隐藏而不是不活动。

通常分割/缓冲相关的命令会分割当前窗口，但是也可以让Vim在已经有窗口打开所指定的缓冲时，切换到那个窗口而不是新建一个:

:set switchbuf=useopen
